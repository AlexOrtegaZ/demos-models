components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: number
        phoneNumber:
          type: string
        name:
          type: string
        profilePictureUrl:
          type: string
        cognitoId:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
      example:
        userId: 1
        phoneNumber: '+273333773883'
        name: fake name
        profilePictureUrl: 'https://radomurl.com/id-photo'
        cognitoId: '0d28c258-3bef-4cac-b04f-66a5488f94f6'
        createdAt: '2021-08-04 22:49:49.906226'
        updatedAt: '2021-08-04 22:49:49.906226'
    Space:
      type: object
      properties:
        spaceId:
          type: string
        name:
          type: string
        description:
          type: string
        pictureKey:
          type: string
        approvalPercentage:
          type: number
        participationPercentage:
          type: number
        ownerId:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
      example:
        spaceId: 'ef82ab99-0998-46f2-bb8b-7bdda5ae61bb' 
        name: 'Nombre del espacio'
        description: 'Descripcion del espacio'
        pictureKey: null
        approvalPercentage: 60
        participationPercentage: 60
        ownerId: 'ffc7ca5f-db51-48f0-9377-d8bc8fe34220'
        createdAt: '2021-08-22T04:56:25.129Z'
        updatedAt: '2021-08-22T04:56:25.129Z'

    Invitations:
      type: object
      propierties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/InvitationItem'
      example:
        users:
          - phoneNumber: '+524433223344'
          - userId: 'ffc7ca5f-db51-48f0-9377-d8bc8fe34220'

    InvitationItem:
      type: object
      properties:
        phoneNumber:
          type: string
        userId:
          type: string

    LoginResponse:
      type: object
      properties:
        session:
          type: string
      example:
        session: AYABeHqDCI8U6VyuZV9IvPz17-EAHQABAAdTZXJ2aWNlABBDb2duaXRvVXNlclBvb2xzAAEAB2F3cy1rbXMAS2Fybjphd3M6a21zOnVzLWVhc3QtMTo3NDU2MjM0Njc1NTU6a2V5

    Token:
      type: string
      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg


    AuthTokens:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/Token'
        refreshToken:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
